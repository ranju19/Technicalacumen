NEW
const USER = "You";
const threadsDiv = document.getElementById('threads');
const postBtn = document.getElementById('post-btn');
const msgInput = document.getElementById('msg');

function fetchThreads() {
  fetch('/api/threads')
    .then(res => res.json())
    .then(data => {
      threadsDiv.innerHTML = '';
      data.forEach(thread => {
        threadsDiv.innerHTML += `
          <div class="msg-bubble" style="margin-bottom: 2em;">
            <b>${thread.user}:</b> ${thread.text}
          </div>
        `;
      });
      threadsDiv.scrollTop = threadsDiv.scrollHeight;
    });
}

setInterval(fetchThreads, 2000);
fetchThreads();

postBtn.onclick = function() {
  if (!msgInput.value.trim()) return;
  fetch('/api/threads', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ text: msgInput.value, user: USER })
  }).then(() => {
    msgInput.value = '';
    fetchThreads();
  });
};
--------------------------------------------------------------------------------------------------------
OLD
const USER = "You";

const messagesDiv = document.getElementById('messages');
const chatForm = document.getElementById('chat-form');
const msgInput = document.getElementById('msg');

setInterval(fetchMessages, 2000);
fetchMessages();

function fetchMessages() {
  fetch('/api/chime/list')
    .then(res => res.json())
    .then(data => {
      messagesDiv.innerHTML = '';
      (data.ChannelMessages || []).forEach(msg => {

        const isMe = msg.user === USER;
        messagesDiv.innerHTML += `<div class="msg-bubble${isMe ? ' me' : ''}"><b>${msg.user}:</b> ${msg.text}</div>`;
      });
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    });
}


--------------------------------------------------------------------------------------------------------

1B. Add “Post” Button at the Top and Message Input at Bottom
Inside your <main class="discord-main">, right at the top, add:
<div style="display: flex; align-items: center; gap: 10px; padding: 10px;">
  <button id="post-btn" style="background: #8d43ff; color: #fff; border: none; padding: 0.6em 1.5em; border-radius: 6px; font-weight: bold; cursor: pointer;">Post</button>
</div>

Below your main messages area, add:
<div style="padding: 10px; background: #40444b;">
  <input type="text" id="msg" placeholder="Type your thread post..." autocomplete="off" style="width: 90%; padding: 0.6em; border-radius: 6px; border: none; background: #2f3136; color: #fff;">
</div>







fetch('/api/chime/send', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    channelArn: "arn:aws:chime:us-east-1:161289594039:app-instance/7d160e34-c880-436f-b006-435a9387c439/channel/f20095c6-041f-488a-bfa6-5bd56e4dbdd1",
    senderArn: "arn:aws:chime:us-east-1:161289594039:app-instance/7d160e34-c880-436f-b006-435a9387c439/user/ta-admin",
    content: msgInput.value
  })
})


1. Sidebar User Profile (bottom of sidebar)
Add at the end of your .discord-sidebar:
<!-- Add this just before closing </aside> -->
<div class="sidebar-user">
  <img src="https://api.dicebear.com/7.x/pixel-art/svg?seed=gomma" class="sidebar-avatar" alt="User" />
  <span class="sidebar-username">User</span>
</div>

2. Main Area Top Bar (search + post)
Add at the very top inside .discord-main (above .discord-messages):
<div class="chat-header">
  <input type="text" class="chat-search" placeholder="Search conversations..." />
  <button class="post-btn" onclick="openThreadModal()">Post</button>
</div>

3. Three Button Bar (My Posts, Suggestions, Favourites)
Add below .chat-header, above .discord-messages:
<div class="chat-buttons">
  <button>My Posts</button>
  <button>Suggestions</button>
  <button>Favourites</button>
</div>

4. Thread-Style Modal (for “Post” button)
Add below everything in your HTML (but inside <body>) to show when posting a new thread:
<div id="threadModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeThreadModal()">&times;</span>
    <h3>Start a new thread</h3>
    <textarea id="threadMsg" rows="4" style="width: 100%;" placeholder="What do you want to discuss?"></textarea>
    <br>
    <button onclick="postThread()" class="post-btn">Post Thread</button>
  </div>
</div>

5. JS for Modal
Add at the end of your <script>:
function openThreadModal() {
  document.getElementById('threadModal').style.display = 'block';
}
function closeThreadModal() {
  document.getElementById('threadModal').style.display = 'none';
}
function postThread() {
  const msg = document.getElementById('threadMsg').value.trim();
  if (!msg) return alert("Please type something for your thread.");
  // Add your POST logic for threads here
  closeThreadModal();
  alert("Thread posted (demo)!"); // Replace with real logic
  document.getElementById('threadMsg').value = '';
}

.sidebar-user {
  margin-top: auto;
  width: 100%;
  text-align: center;
  padding: 20px 0 10px;
  background: #23272a;
}

.sidebar-avatar {
  width: 38px;
  height: 38px;
  border-radius: 50%;
  margin-bottom: 7px;
  background: #111;
  object-fit: cover;
}

.sidebar-username {
  color: #fff;
  font-size: 15px;
  font-weight: 500;
}
.chat-header {
  display: flex;
  align-items: center;
  padding: 15px 18px 0 18px;
  background: #36393f;
  gap: 12px;
}
.chat-search {
  flex: 1;
  padding: 7px 12px;
  border-radius: 7px;
  border: none;
  background: #23272a;
  color: #fff;
  font-size: 15px;
}
.post-btn {
  background: #7d4fff;
  color: #fff;
  border: none;
  padding: 7px 24px;
  border-radius: 7px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s;
}
.post-btn:hover {
  background: #5865f2;
}
.chat-buttons {
  display: flex;
  justify-content: center;
  gap: 18px;
  padding: 15px 0 0 0;
  background: #36393f;
}
.chat-buttons button {
  background: #23272a;
  color: #fff;
  border: none;
  padding: 7px 22px;
  border-radius: 14px;
  font-weight: 500;
  font-size: 15px;
  cursor: pointer;
  transition: background 0.2s;
}
.chat-buttons button:hover {
  background: #7d4fff;
}
.modal { display:none; position:fixed; z-index:999; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.4);}
.modal-content { background: #23272a; margin:8% auto; padding:28px 20px; border-radius: 16px; width: 90%; max-width: 370px; color:#fff; position:relative;}
.close { color: #aaa; position:absolute; top:12px; right:18px; font-size:28px; font-weight:bold; cursor:pointer;}
.close:hover { color: #fff; }
















--------------------------------------------------------------------------------------------------------------------------
CSS:
  .discord-chat-container {
  display: flex;
  height: 80vh;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 0 24px #23272a66;
  font-family: 'Segoe UI', Arial, sans-serif;
}

.discord-sidebar {
  width: 200px;
  background: #23272a;
  color: #fff;
  padding: 1em 0.5em;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.discord-channel {
  padding: 0.6em 1em;
  margin-bottom: 0.5em;
  border-radius: 7px;
  cursor: pointer;
  background: #2f3136;
  font-weight: bold;
}

.discord-channel.active {
  background: #5865f2;
  color: #fff;
}

.discord-main {
  flex: 1;
  background: #36393f;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}
.discord-messages {
  flex: 1;
  overflow-y: auto;
  padding: 1.2em;
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.msg-bubble {
  padding: 0.6em 1em;
  background: #40444b;
  color: #fff;
  border-radius: 12px;
  width: fit-content;
  max-width: 80%;
  margin-bottom: 0.3em;
  word-break: break-word;
  font-size: 1em;
}

.msg-bubble.me {
  background: #5865f2;
  margin-left: auto;
  color: #fff;
}

.discord-input-bar {
  display: flex;
  border-top: 1px solid #222;
  padding: 0.6em;
  background: #40444b;
}


.discord-input-bar input {
  flex: 1;
  padding: 0.6em;
  border-radius: 6px;
  border: none;
  background: #2f3136;
  color: #fff;
  margin-right: 0.8em;
  outline: none;
}

.discord-input-bar button {
  padding: 0.6em 1.5em;
  background: #5865f2;
  color: #fff;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
}

.discord-input-bar button:hover {
  background: #4752c4;
}



HTML:
<!-- Discord-Style Chatroom START -->
<div class="discord-chat-container">
  <aside class="discord-sidebar">
    <div class="discord-channel active"># general</div>
    <!-- You can add more channels here -->
  </aside>
  <main class="discord-main">
    <div id="messages" class="discord-messages"></div>
    <form id="chat-form" class="discord-input-bar" autocomplete="off">
      <input type="text" id="msg" placeholder="Type a message..." autocomplete="off" />
      <button type="submit">Send</button>
    </form>
  </main>
</div>

SCRIPT:
<script>
const USER = "You";

const messagesDiv = document.getElementById('messages');
const chatForm = document.getElementById('chat-form');
const msgInput = document.getElementById('msg');

setInterval(fetchMessages, 2000);
fetchMessages();

function fetchMessages() {
  fetch('/api/messages')
    .then(res => res.json())
    .then(data => {
      messagesDiv.innerHTML = '';
      data.forEach(msg => {

        const isMe = msg.user === USER;
        messagesDiv.innerHTML += `<div class="msg-bubble${isMe ? ' me' : ''}"><b>${msg.user}:</b> ${msg.text}</div>`;
      });
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    });
}

chatForm.onsubmit = function(e) {
  e.preventDefault();
  if (!msgInput.value.trim()) return;
  fetch('/api/send', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ text: msgInput.value, user: USER })
  }).then(() => {
    msgInput.value = '';
    fetchMessages();
  });
};
</script>












------------------------------------------------------------------------------------------------------------------------------------------------
HTML:
<!-- Discord-Style Chatroom START -->
<div class="discord-chat-container">
  <aside class="discord-sidebar">
    <div class="discord-channel active"># general</div>
    <!-- You can add more channels here -->
  </aside>
  <main class="discord-main">
    <div id="messages" class="discord-messages"></div>
    <form id="chat-form" class="discord-input-bar" autocomplete="off">
      <input type="text" id="msg" placeholder="Type a message..." autocomplete="off" />
      <button type="submit">Send</button>
    </form>
  </main>
</div>
<!-- Discord-Style Chatroom END -->

  CSS:
  .discord-chat-container {
  display: flex;
  height: 80vh;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 0 24px #23272a66;
  font-family: 'Segoe UI', Arial, sans-serif;
}

.discord-sidebar {
  width: 200px;
  background: #23272a;
  color: #fff;
  padding: 1em 0.5em;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.discord-channel {
  padding: 0.6em 1em;
  margin-bottom: 0.5em;
  border-radius: 7px;
  cursor: pointer;
  background: #2f3136;
  font-weight: bold;
}

.discord-channel.active {
  background: #5865f2;
  color: #fff;
}

.discord-main {
  flex: 1;
  background: #36393f;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

.discord-messages {
  flex: 1;
  overflow-y: auto;
  padding: 1.2em;
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.msg-bubble {
  padding: 0.6em 1em;
  background: #40444b;
  color: #fff;
  border-radius: 12px;
  width: fit-content;
  max-width: 80%;
  margin-bottom: 0.3em;
  word-break: break-word;
  font-size: 1em;
}

.msg-bubble.me {
  background: #5865f2;
  margin-left: auto;
  color: #fff;
}

.discord-input-bar {
  display: flex;
  border-top: 1px solid #222;
  padding: 0.6em;
  background: #40444b;
}

.discord-input-bar input {
  flex: 1;
  padding: 0.6em;
  border-radius: 6px;
  border: none;
  background: #2f3136;
  color: #fff;
  margin-right: 0.8em;
  outline: none;
}

.discord-input-bar button {
  padding: 0.6em 1.5em;
  background: #5865f2;
  color: #fff;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-weight: bold;
}

.discord-input-bar button:hover {
  background: #4752c4;
}

JS:
<script>
// For demo, set your name here (or use login)
const USER = "You"; // Can be dynamic if you want

const messagesDiv = document.getElementById('messages');
const chatForm = document.getElementById('chat-form');
const msgInput = document.getElementById('msg');

// Poll for new messages every 2s
setInterval(fetchMessages, 2000);
fetchMessages();

function fetchMessages() {
  fetch('/api/messages') // <--- CHANGE THIS if your endpoint is different
    .then(res => res.json())
    .then(data => {
      messagesDiv.innerHTML = '';
      data.forEach(msg => {
        // Simple "me" highlighting
        const isMe = msg.user === USER;
        messagesDiv.innerHTML += `<div class="msg-bubble${isMe ? ' me' : ''}"><b>${msg.user}:</b> ${msg.text}</div>`;
      });
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    });
}

chatForm.onsubmit = function(e) {
  e.preventDefault();
  if (!msgInput.value.trim()) return;
  fetch('/api/send', { // <--- CHANGE THIS if your endpoint is different
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ text: msgInput.value, user: USER })
  }).then(() => {
    msgInput.value = '';
    fetchMessages();
  });
};
</script>
